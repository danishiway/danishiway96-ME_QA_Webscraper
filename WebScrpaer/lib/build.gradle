/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
   jcenter()
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
        testImplementation 'org.seleniumhq.selenium:selenium-java:4.1.1' // Adjust version as needed
    
testImplementation 'org.testng:testng:7.4.0' // Adjust version as needed
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
     testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0' // Adjust version as needed
     testImplementation 'io.github.bonigarcia:webdrivermanager:5.0.3' // Adjust version as needed
 }

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
test {
    useTestNG() {
        suites 'src/test/resources/testng.xml'
        useDefaultListeners = true
    }
    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"
    }
}
  
    
   // mainClassName = '_WebScrpaer.App'
    